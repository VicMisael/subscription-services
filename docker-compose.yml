version: "3.7"


services:

  postgres:
    image: postgres:14.3-alpine3.15
    environment:
      POSTGRES_USER: subscription_service
      POSTGRES_PASSWORD: 92QMNMKVPee
      POSTGRES_DB: subsservice
    ports:
      - 5431:5432
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: event_service
      MONGO_INITDB_ROOT_PASSWORD: Y585wKkKZp95xrwq

    ports:
      - 27018:27017
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: "no"
    ports:
      - "2181:2181"

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: "no"
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"
  subscriptionservice:
      build: ./subscriptionservice
      ports:
        - 8081:8080
      environment:
        SPRING_PROFILES_ACTIVE: dockerized
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      depends_on:
        - "postgres"
        - "kafka"
  eventservice:
      build: ./eventservice
      environment:
        KAFKA_BROKER: kafka:29092
        MONGO_DB: mongo:27017
      ports:
        - 8082:3000
      depends_on:
        - kafka
        - mongo